name: test

on:
  push:
    branches: [main]
    paths-ignore: [ "docs/**", "README.md", "CHANGELOG.md", "CODE_OF_CONDUCT.md", "SECURITY.md", "Justfile"]
  pull_request:
    branches: [main]
    paths-ignore: [ "docs/**", "README.md", "CHANGELOG.md", "CODE_OF_CONDUCT.md", "SECURITY.md", "Justfile"]

concurrency:
    group: test-${{ github.head_ref }}
    cancel-in-progress: true

env:
  PYTHONUNBUFFERED: "1"
  FORCE_COLOR: "1"
  DJANGO_DEBUG: "1"

jobs:
  run:
    name: Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.11", "3.12"]
        django-version: ["4.2", "5.0"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }} for Django ${{ matrix.django-version }}
        id: setup_python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          django-version: ${{ matrix.django-version }}

      - name: Install uv
        run: pip install --upgrade uv

      - name: Setup cache
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup_python.outputs.python-version}}-Django-${{ steps.setup_python.outputs.django_version }}-${{ hashFiles('requirements-dev.lock') }}
          restore-keys: venv-${{ runner.os }}-${{ steps.setup_python.outputs.python-version}}-Django-${{ steps.setup_python.outputs.django_version }}-

      - name: Create venv, install dependencies
        run: |
          python -m uv venv
          python -m uv pip install --upgrade pip
          python -m uv pip install -e .[test]
          python -m uv pip install Django~="${{ matrix.django-version }}.0"
          source .venv/bin/activate
          echo "$VIRTUAL_ENV/bin" >> $GITHUB_PATH
          echo "VIRTUAL_ENV=$VIRTUAL_ENV" >> $GITHUB_ENV
          python -m spacy download en_core_web_trf

      - name: Run tests
        run: |
          python -m pytest --cov-report=term-missing --cov-config=pyproject.toml --cov=src/django_markov
          python -m coverage lcov

      - name: Submit coverage data to coveralls.io
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: "coverage.lcov"
